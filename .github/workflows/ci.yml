name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:

  msgcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y gettext aspell libenchant-2-dev
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: "requirements.txt"
      - run: python -m pip install -r requirements.txt
      - run: msgcheck -n hijack/locale/*/LC_MESSAGES/*.po

  lint:
    strategy:
      fail-fast: false
      matrix:
        lint-command:
          - "bandit -r hijack -x hijack/tests"
          - "black --check --diff ."
          - "flake8 ."
          - "isort --check-only --diff ."
          - "pydocstyle ."
          - "mkdocs build --strict --verbose"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: "requirements.txt"
      - run: python -m pip install -r requirements.txt
      - run: ${{ matrix.lint-command }}

  readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y gettext
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: actions/setup-node@v3
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip build wheel twine readme-renderer
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm ci
      - run: npm run lint:scss

  standardjs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run lint:js

  pytest:
    runs-on: ubuntu-latest
    needs:
      - readme
      - lint
      - stylelint
      - standardjs
      - msgcheck
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "3.2"
          - "4.0"
          - "4.1"
        include:
          - python-version: "3.7"
            django-version: "3.2"
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y gettext
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v3
      - run: python -m pip install -e .[test]
      - run: python -m pip install django~=${{ matrix.django-version }}.0
      - run: python -m pytest
      - uses: codecov/codecov-action@v3

  analyze:
    name: CodeQL Analyze
    needs: [pytest]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language:
          - python
          - javascript
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"
