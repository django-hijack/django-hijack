name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  msgcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4.2.0
      - uses: actions/checkout@v3
      - run: sudo apt install -y gettext aspell libenchant-dev
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python -m pip install -r requirements.txt
      - run: msgcheck -n hijack/locale/*/LC_MESSAGES/*.po

  lint:
    strategy:
      fail-fast: false
      matrix:
        lint-command:
          - "bandit -r hijack -x hijack/tests"
          - "black --check --diff ."
          - "flake8 ."
          - "isort --check-only --diff ."
          - "pydocstyle ."
          - "mkdocs build --strict --verbose"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4.2.0
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python -m pip install -r requirements.txt
      - run: ${{ matrix.lint-command }}

  readme:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install -y gettext
      - uses: actions/setup-python@v4.2.0
      - uses: actions/setup-node@v3.4.1
      - uses: actions/checkout@v3
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip build wheel twine readme-renderer
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3.4.1
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run lint:scss

  standardjs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3.4.1
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run lint:js

  pytest:
    runs-on: ubuntu-latest
    needs:
      - readme
      - lint
      - stylelint
      - standardjs
      - msgcheck
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "3.2"
          - "4.0"
        include:
          - python-version: "3.7"
            django-version: "3.2"
    steps:
    - run: sudo apt install -y gettext
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.2.0
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/setup-node@v3.4.1
    - uses: actions/checkout@v3
    - name: Upgrade Python setuptools
      run: python -m pip install --upgrade pip setuptools wheel codecov
    - run: python -m pip install -e .[test]
    - name: Install Django ${{ matrix.django-version }}
      run: python -m pip install django~=${{ matrix.django-version }}a
    - name: Run tests
      run: python -m pytest
    - run: codecov
